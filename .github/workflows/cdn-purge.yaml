on: 
  repository_dispatch:
    types:
      - resource-published
      - resource-unpublished
jobs:
  print:
    runs-on: ubuntu-latest
    steps:
    - name: Echo Info
      run: |
        echo "Status: ${{ github.event.client_payload.status }}"
        echo "Payload: ${{ toJson(github.event.client_payload) }}"
  cdn-purge:
    if: ${{ !endsWith(github.event.client_payload.path, 'placeholders.json') }}
    runs-on: ubuntu-latest
    steps:
      - name: Format brand
        id: formatbrand
        uses: frabert/replace-string-action@v2
        with:
          pattern: '([a-zA-Z0-9]*)\-([a-zA-Z0-9]*)\-([a-zA-Z0-9]*)'
          string: ${{ github.event.client_payload.site }}
          replace-with: '$1'
      - name: Format env
        id: formatenv
        uses: frabert/replace-string-action@v2
        with:
          pattern: '([a-zA-Z0-9]*)\-([a-zA-Z0-9]*)\-([a-zA-Z0-9]*)'
          string: ${{ github.event.client_payload.site }}
          replace-with: '$2'
      - name: Format market
        id: formatmarket
        uses: frabert/replace-string-action@v2
        with:
          pattern: '([a-zA-Z0-9]*)\-([a-zA-Z0-9]*)\-([a-zA-Z0-9]*)'
          string: ${{ github.event.client_payload.site }}
          replace-with: '$3'
      - name: uppercase
        id: upperbrand
        uses: ASzc/change-string-case-action@v6
        with:
          string: ${{steps.formatbrand.outputs.replaced}}
      - id: upperenv
        uses: ASzc/change-string-case-action@v6
        with:
          string: ${{steps.formatenv.outputs.replaced}}
      - id: uppermarket
        uses: ASzc/change-string-case-action@v6
        with:
          string: ${{steps.formatmarket.outputs.replaced}}
      - name: Format Keys
        id: formatkeys
        run: |
          echo "CDN_DOMAINS_KEY=${{ format('{0}_{1}_CDN_DOMAINS', steps.upperbrand.outputs.uppercase, steps.upperenv.outputs.uppercase ) }}" >>$GITHUB_ENV
          echo "CDN_DOMAINS_ALL_KEY=${{ format('{0}_{1}_CDN_DOMAINS_ALL', steps.upperbrand.outputs.uppercase, steps.upperenv.outputs.uppercase ) }}" >>$GITHUB_ENV
          echo "FASTLY_API_KEY_KEY=${{ format('{0}_{1}_FASTLY_API_KEY', steps.upperbrand.outputs.uppercase, steps.upperenv.outputs.uppercase ) }}" >>$GITHUB_ENV
          echo "CDN_PURGE_MARKETS_KEY=${{ format('{0}_{1}_CDN_PURGE_MARKETS', steps.upperbrand.outputs.uppercase, steps.upperenv.outputs.uppercase ) }}" >>$GITHUB_ENV
      - name: Set BRAND, ENV, MARKET
        run: |
          echo "BRAND=${{ steps.upperbrand.outputs.uppercase }}" >> $GITHUB_ENV
          echo "ENV=${{ steps.upperenv.outputs.uppercase }}" >> $GITHUB_ENV
          echo "MARKET=${{ steps.uppermarket.outputs.uppercase }}" >> $GITHUB_ENV
          echo "CDN_PURGE_MARKETS=${{ vars[env.CDN_PURGE_MARKETS_KEY] }}" >> $GITHUB_ENV
          echo "###${{ env.BRAND }}###"
          echo "###${{ env.ENV }}###"
          echo "###${{ env.MARKET }}###"
          echo "###${{ env.CDN_DOMAINS_KEY }}###"
          echo "###${{ env.CDN_DOMAINS }}###"
          echo "###${{ env.CDN_PURGE_MARKETS }}###"
      - name: Format path
        id: format
        uses: frabert/replace-string-action@v2
        with:
          pattern: '\.md'
          string: ${{ github.event.client_payload.path }}
          replace-with: ''
      - name: Echo during CDN Purge
        run: |
          echo "###${{ env.CDN_DOMAINS }}###"
      - name: Purge CDN Docs (except Placeholders)
        if: ${{ contains(env.CDN_PURGE_MARKETS, env.MARKET) }}
        id: purgecdn
        env:
          FASTLY_API_KEY: ${{ secrets[env.FASTLY_API_KEY_KEY] }}
          CDN_DOMAINS: ${{vars[env.CDN_DOMAINS_KEY]}}
          CDN_DOMAINS_ALL: ${{vars[env.CDN_DOMAINS_ALL_KEY]}}
        uses: fjogeleit/http-request-action@v1
        with:
          url: ${{ format('https://api.fastly.com/purge/{0}{1}', fromJSON(env.CDN_DOMAINS)[env.MARKET],  steps.format.outputs.replaced) }}
          method: 'POST'
          customHeaders: '{"Content-Type": "application/json", "Fastly-Key": "${{ env.FASTLY_API_KEY }}", "Accept": "application/json"}'
      - name: Show Response
        run: |
          echo ${{ steps.purgecdnmd.outputs.response }}
          echo ${{ steps.purgecdnmd.outputs.headers }}
          echo ${{ steps.purgecdnmd.outputs.status }}
  build-vars:
    runs-on: ubuntu-latest
    outputs:
      BRAND: ${{ steps.setvars.outputs.BRAND }}
      ENV: ${{ steps.setvars.outputs.ENV }}
      MARKET: ${{ steps.setvars.outputs.MARKET }}
      CDN_PURGE_MARKETS: ${{ steps.setvars.outputs.CDN_PURGE_MARKETS }}
      CDN_DOMAINS_KEY: ${{ steps.setvars.outputs.CDN_DOMAINS_KEY }}
      CDN_DOMAINS_ALL_KEY: ${{ steps.setvars.outputs.CDN_DOMAINS_ALL_KEY }}
      FASTLY_API_KEY_KEY: ${{ steps.setvars.outputs.FASTLY_API_KEY_KEY }}
      matrix: ${{ steps.setvars.outputs.CDN_PURGE_MARKETS }}
    steps:
      - name: Format brand
        id: formatbrand
        uses: frabert/replace-string-action@v2
        with:
          pattern: '([a-zA-Z0-9]*)\-([a-zA-Z0-9]*)\-([a-zA-Z0-9]*)'
          string: ${{ github.event.client_payload.site }}
          replace-with: '$1'
      - name: Format env
        id: formatenv
        uses: frabert/replace-string-action@v2
        with:
          pattern: '([a-zA-Z0-9]*)\-([a-zA-Z0-9]*)\-([a-zA-Z0-9]*)'
          string: ${{ github.event.client_payload.site }}
          replace-with: '$2'
      - name: Format market
        id: formatmarket
        uses: frabert/replace-string-action@v2
        with:
          pattern: '([a-zA-Z0-9]*)\-([a-zA-Z0-9]*)\-([a-zA-Z0-9]*)'
          string: ${{ github.event.client_payload.site }}
          replace-with: '$3'
      - name: uppercase
        id: upperbrand
        uses: ASzc/change-string-case-action@v6
        with:
          string: ${{steps.formatbrand.outputs.replaced}}
      - id: upperenv
        uses: ASzc/change-string-case-action@v6
        with:
          string: ${{steps.formatenv.outputs.replaced}}
      - id: uppermarket
        uses: ASzc/change-string-case-action@v6
        with:
          string: ${{steps.formatmarket.outputs.replaced}}
      - name: Format Keys
        id: formatkeys
        run: |
          echo "CDN_PURGE_MARKETS_KEY=${{ format('{0}_{1}_CDN_PURGE_MARKETS', steps.upperbrand.outputs.uppercase, steps.upperenv.outputs.uppercase ) }}" >>$GITHUB_ENV
      - name: Set BRAND, ENV, MARKET
        id: setvars
        run: |
          echo "BRAND=${{ steps.upperbrand.outputs.uppercase }}" >> $GITHUB_OUTPUT
          echo "ENV=${{ steps.upperenv.outputs.uppercase }}" >> $GITHUB_OUTPUT
          echo "MARKET=${{ steps.uppermarket.outputs.uppercase }}" >> $GITHUB_OUTPUT
          echo "CDN_PURGE_MARKETS=${{ vars[env.CDN_PURGE_MARKETS_KEY] }}" >> $GITHUB_OUTPUT
          echo "CDN_DOMAINS_KEY=${{ format('{0}_{1}_CDN_DOMAINS', steps.upperbrand.outputs.uppercase, steps.upperenv.outputs.uppercase ) }}" >>$GITHUB_OUTPUT
          echo "CDN_DOMAINS_ALL_KEY=${{ format('{0}_{1}_CDN_DOMAINS_ALL', steps.upperbrand.outputs.uppercase, steps.upperenv.outputs.uppercase ) }}" >>$GITHUB_OUTPUT
          echo "FASTLY_API_KEY_KEY=${{ format('{0}_{1}_FASTLY_API_KEY', steps.upperbrand.outputs.uppercase, steps.upperenv.outputs.uppercase ) }}" >>$GITHUB_OUTPUT
  cdn-purgeplaceholders:
    if: ${{ endsWith(github.event.client_payload.path, 'placeholders.json') && endsWith(github.event.client_payload.site, 'global') }}
    needs: build-vars
    runs-on: ubuntu-latest
    steps:
      - name: Echo Vars
        run: |
          echo "###${{ needs.build-vars.outputs.BRAND }}###"
          echo "###${{ needs.build-vars.outputs.ENV }}###"
          echo "###${{ needs.build-vars.outputs.MARKET }}###"
          echo "###${{ needs.build-vars.outputs.CDN_PURGE_MARKETS }}###"
          echo "###${{ needs.build-vars.outputs.CDN_DOMAINS_KEY }}###"
          echo "###${{ needs.build-vars.outputs.CDN_DOMAINS_ALL_KEY }}###"
          echo "###${{ needs.build-vars.outputs.FASTLY_API_KEY_KEY }}###"
      - name: Format path
        id: format
        uses: frabert/replace-string-action@v2
        with:
          pattern: '\.md'
          string: ${{ github.event.client_payload.path }}
          replace-with: ''
      - name: echo domain
        run: |
          echo "Domain: ${{ matrix.domain }}"
      - name: Purge CDN JSON
        id: purgecdnjson
        uses: fjogeleit/http-request-action@v1
        with:
          url: ${{ format('https://api.fastly.com/purge/{0}{1}', matrix.domain,  steps.format.outputs.replaced) }}
          method: 'POST'
          customHeaders: '{"Content-Type": "application/json", "Fastly-Key": "${{ secrets.FASTLY_API_KEY }}", "Accept": "application/json"}'
      - name: Show Response
        run: |
          echo ${{ steps.purgecdnjson.outputs.response }}
          echo ${{ steps.purgecdnjson.outputs.headers }}
          echo ${{ steps.purgecdnjson.outputs.status }}
