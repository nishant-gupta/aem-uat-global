name: Cypress Visual Testing

on:
  workflow_dispatch:  # Allows manual trigger
    inputs:
      Brandcode:
        description: "Brand code for the page"
        required: true
      PageType:
        description: "Page type for the test"
        required: true
      URL1:
        description: "First URL for comparison"
        required: true
      URL2:
        description: "Second URL for comparison"
        required: true
  pull_request:
    types:
      - opened
      - synchronize  # Runs on every new commit push
      - reopened     # Runs if PR is reopened
    branches:
      - main

jobs:
  cypress-test:
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Checkout Repository
        uses: actions/checkout@v4

      - name: 📜 Extract URLs from PR Description
        id: extract_urls
        run: |
          PR_BODY="${{ github.event.pull_request.body }}"

          echo "PR Description: $PR_BODY"

          BEFORE_URL=$(echo "$PR_BODY" | grep -oP '(?<=Before: )https?://[^\s]+')
          AFTER_URL=$(echo "$PR_BODY" | grep -oP '(?<=After: )https?://[^\s]+')
          BRAND=$(echo "$PR_BODY" | grep -oP '(?<=Brand: )[^\s]+')
          PAGETYPE=$(echo "$PR_BODY" | grep -oP '(?<=PageType: )[^\s]+')

          if [[ -z "$BEFORE_URL" || -z "$AFTER_URL" ]]; then
            echo "🚨 URLs not found in PR description! Skipping test."
            echo "skip_test=true" >> $GITHUB_ENV
          else
            echo "🎯 Extracted BEFORE_URL: $BEFORE_URL"
            echo "🎯 Extracted AFTER_URL: $AFTER_URL"
            echo "BEFORE_URL=$BEFORE_URL" >> $GITHUB_ENV
            echo "AFTER_URL=$AFTER_URL" >> $GITHUB_ENV
            echo "BRAND=$BRAND" >> $GITHUB_ENV
            echo "PAGETYPE=$PAGETYPE" >> $GITHUB_ENV
          fi

      - name: 🚫 Skip if URLs are missing
        if: env.skip_test == 'true'
        run: echo "Skipping test since URLs are missing."

      - name: 🛠️ Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: 📦 Install Dependencies
        run: npm install

      - name: 🚀 Run Cypress Visual Test
        run: |
          npx cypress run --headless --browser chrome
        env:
          URL_1: ${{ env.BEFORE_URL || github.event.inputs.URL1 || 'https://dev--bbw-qa-global--alshaya-axp.aem.page/en/aura-info' }}
          URL_2: ${{ env.AFTER_URL || github.event.inputs.URL2 || 'https://dev-fix-84223--bbw-qa-global--alshaya-axp.aem.page/en/aura-info' }}
          Brandcode: ${{ env.BRAND || github.event.inputs.Brandcode || 'BBW' }}
          PageType: ${{ env.PAGETYPE || github.event.inputs.PageType || 'Aura' }}
      - name: 🖼️ Upload Cypress Screenshots & Diff Images
        if: always() # Always run this step
        uses: actions/upload-artifact@v4
        with:
          name: visual-test-artifacts
          path: cypress/screenshots/
          retention-days: 7  # Keep artifacts for 7 days
      - name: 📝 Comment on PR with Artifact Link
        if: always() # Always run this step
        uses: mshick/add-pr-comment@v2
        with:
          message: |
            ✅ **Visual Test Completed**  
            📂 Download Artifacts: [Artifacts](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})  
          repo-token: ${{ secrets.PAT_TOKEN }}
  