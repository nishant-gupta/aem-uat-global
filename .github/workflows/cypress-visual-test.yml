name: Visual Testing

on:
  workflow_dispatch:  # Allows manual trigger
    inputs:
      Brandcode:
        description: "Brand code for the page"
        required: true
      PageType:
        description: "Page type for the test"
        required: true
      URL1:
        description: "First URL for comparison"
        required: true
      URL2:
        description: "Second URL for comparison"
        required: true
  pull_request:
    types:
      - opened
      - synchronize  # Runs on every new commit push
      - reopened     # Runs if PR is reopened
    branches:
      - main

jobs:
  extract-urls:
    runs-on: ubuntu-latest
    outputs:
      urls: ${{ steps.extract.outputs.urls }}
    steps:
      - name: 📥 Checkout Repository
        uses: actions/checkout@v4
      - name: 📝 Extract URLs, Brand & PageType from PR Description
        id: extract
        run: |
          DESCRIPTION=$(echo "${{ github.event.pull_request.body }}" | jq -R -s 'gsub("\r";"")')  # Normalize line endings

          URL_PAIRS=$(echo "$DESCRIPTION" | awk '
            BEGIN { brand=""; pageType=""; before=""; after="" }
            /- Brand:/ { brand=$2 }
            /- PageType:/ { pageType=$2 }
            /- Before:/ { before=$2 }
            /- After:/ { after=$2; 
                        if (brand != "" && pageType != "" && before != "" && after != "") {
                            print "{ \"brand\": \"" brand "\", \"pageType\": \"" pageType "\", \"before\": \"" before "\", \"after\": \"" after "\" }";
                            brand=""; pageType=""; before=""; after="";
                        }
                      }
          ' | jq -s -c)

          # Ensure valid JSON output
          if [[ -z "$URL_PAIRS" || "$URL_PAIRS" == "[]" ]]; then
            URL_PAIRS="[]"
          fi

          echo "Extracted URL Pairs: $URL_PAIRS"
          echo "urls=$URL_PAIRS" >> "$GITHUB_OUTPUT"

  cypress-test:
    needs: extract-urls
    runs-on: ubuntu-latest
    strategy:
      matrix:
        pair: ${{ fromJson(needs.extract-urls.outputs.urls) }}
    steps:
      - name: 📥 Checkout Repository
        uses: actions/checkout@v4

      - name: 🛠️ Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: 📦 Install Dependencies
        run: npm install

      - name: 🚀 Run Cypress Visual Test
        id: cypress
        run: |
          npx cypress run --headless --browser chrome --env Brandcode=${{ matrix.pair.brand }},PageType=${{ matrix.pair.pageType }},baseUrl1=${{ matrix.pair.before }},baseUrl2=${{ matrix.pair.after }}
        continue-on-error: true

      - name: 🖼️ Upload Cypress Screenshots & Diff Images
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: visual-test-${{ matrix.pair.brand }}-${{ matrix.pair.pageType }}-${{ matrix.pair.before }}-vs-${{ matrix.pair.after }}
          path: cypress/screenshots/
          retention-days: 7

      - name: 📝 Collect Test Results
        id: test-result
        run: echo "result=${{ steps.cypress.outcome == 'success' && '✅ Passed' || '❌ Failed' }}" >> "$GITHUB_ENV"

  comment-on-pr:
    needs: cypress-test
    runs-on: ubuntu-latest
    steps:
      - name: 📝 Post Test Summary on PR
        uses: mshick/add-pr-comment@v2
        with:
          message: |
            # 🖼️ **Visual Test Results**
            **Results:**
            - **Brand:** `${{ matrix.pair.brand }}`
            - **Page Type:** `${{ matrix.pair.pageType }}`
            - **Before:** `${{ matrix.pair.before }}`
            - **After:** `${{ matrix.pair.after }}`
            - **Result:** `${{ env.result }}`
          repo-token: ${{ secrets.PAT_TOKEN }}
