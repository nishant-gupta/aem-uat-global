on: 
  repository_dispatch:
    types:
      - resource-published
      - resource-unpublished
jobs:
  print:
    runs-on: ubuntu-latest
    steps:
    - name: Echo stuff!
      run: |
        echo "Status: ${{ github.event.client_payload.status }}"
        echo "Payload: ${{ toJson(github.event.client_payload) }}"
        echo ${{ vars.AEM_UAT_CDN_PURGE_SITES}}
        echo ${{ toJson(vars.AEM_UAT_CDN_DOMAINS) }}
        echo ":: ${{ github.event.client_payload.site }}>> ${{ fromJSON(vars.AEM_UAT_CDN_DOMAINS)[github.event.client_payload.site]}}::"
    - name: Set Env (UAT/PROD)
      run: |
        echo "ENV_VALUE=${{ contains(github.event.client_payload.site, '_uat_') && 'UAT' || 'PROD' }}" >> $GITHUB_ENV
    - name: Echo stuff! more
      run: |
        echo "###${{ env.ENV_VALUE }}###"
  cdn-purgemd:
    runs-on: ubuntu-latest
    steps:
      - name: Format brand
        id: formatbrand
        uses: frabert/replace-string-action@v2
        with:
          pattern: '([a-zA-Z0-9]*)\-([a-zA-Z0-9]*)\-([a-zA-Z0-9]*)'
          string: ${{ github.event.client_payload.site }}
          replace-with: '$1'
      - name: Format env
        id: formatenv
        uses: frabert/replace-string-action@v2
        with:
          pattern: '([a-zA-Z0-9]*)\-([a-zA-Z0-9]*)\-([a-zA-Z0-9]*)'
          string: ${{ github.event.client_payload.site }}
          replace-with: '$2'
      - name: Format market
        id: formatmarket
        uses: frabert/replace-string-action@v2
        with:
          pattern: '([a-zA-Z0-9]*)\-([a-zA-Z0-9]*)\-([a-zA-Z0-9]*)'
          string: ${{ github.event.client_payload.site }}
          replace-with: '$3'
      - name: uppercase
        id: upperbrand
        uses: ASzc/change-string-case-action@v6
        with:
          string: ${{steps.formatbrand.outputs.replaced}}
      - id: upperenv
        uses: ASzc/change-string-case-action@v6
        with:
          string: ${{steps.formatenv.outputs.replaced}}
      - id: uppermarket
        uses: ASzc/change-string-case-action@v6
        with:
          string: ${{steps.formatmarket.outputs.replaced}}
      - name: Format Keys
        id: formatkeys
        run: |
          echo "CDN_DOMAINS_KEY=${{ format('{0}_{1}_CDN_DOMAINS', steps.upperbrand.outputs.uppercase, steps.upperenv.outputs.uppercase ) }}" >>$GITHUB_ENV
          echo "CDN_DOMAINS_ALL_KEY=${{ format('{0}_{1}_CDN_DOMAINS_ALL', steps.upperbrand.outputs.uppercase, steps.upperenv.outputs.uppercase ) }}" >>$GITHUB_ENV
          echo "FASTLY_API_KEY_KEY=${{ format('{0}_{1}_FASTLY_API_KEY', steps.upperbrand.outputs.uppercase, steps.upperenv.outputs.uppercase ) }}" >>$GITHUB_ENV
      - name: Set BRAND, ENV, MARKET
        run: |
          echo "BRAND=${{ steps.upperbrand.outputs.uppercase }}" >> $GITHUB_ENV
          echo "ENV=${{ steps.upperenv.outputs.uppercase }}" >> $GITHUB_ENV
          echo "MARKET=${{ steps.upperenv.outputs.uppercase }}" >> $GITHUB_ENV
          echo "CDN_DOMAINS=${{vars[env.CDN_DOMAINS_KEY]}}" >> $GITHUB_ENV
          echo "CDN_DOMAINS_ALL=${{vars[env.CDN_DOMAINS_ALL_KEY]}}" >> $GITHUB_ENV
          echo "###${{ env.FASTLY_KEY }}###"
          echo "###${{ env.BRAND }}###"
          echo "###${{ env.ENV }}###"
          echo "###${{ env.MARKET }}###"
          echo "###${{ env.CDN_DOMAINS_KEY }}###"
          echo "###${{ env.CDN_DOMAINS }}###"
      - name: Format path
        id: format
        uses: frabert/replace-string-action@v2
        with:
          pattern: '\.md'
          string: ${{ github.event.client_payload.path }}
          replace-with: ''
      - name: Echo during CDN Purge
        run: |
          echo "###${{ env.CDN_DOMAINS }}###"
          echo "--${{ fromJSON(env.CDN_DOMAINS)[env.MARKET]}}--"
      - name: Purge CDN Markdown
        id: purgecdnmd
        env:
          FASTLY_KEY: ${{ secrets[env.FASTLY_API_KEY_KEY] }}
        uses: fjogeleit/http-request-action@v1
        with:
          url: ${{ format('https://api.fastly.com/purge/{0}{1}', fromJSON(env.CDN_DOMAINS)[env.MARKET],  steps.format.outputs.replaced) }}
          method: 'POST'
          customHeaders: '{"Content-Type": "application/json", "Fastly-Key": "${{ env.FASTLY_API_KEY }}", "Accept": "application/json"}'
      - name: Show Response
        run: |
          echo ${{ steps.purgecdnmd.outputs.response }}
          echo ${{ steps.purgecdnmd.outputs.headers }}
          echo ${{ steps.purgecdnmd.outputs.status }}
  cdn-purgejson:
    if: ${{ contains(vars.CDN_PURGE_SITES, github.event.client_payload.site) && endsWith(github.event.client_payload.path, 'placeholders.json') && endsWith(github.event.client_payload.site, 'global') }}
    runs-on: ubuntu-latest
    strategy:
        matrix:
            domain: ${{ fromJSON(vars.CDN_DOMAINS_ALL)[github.event.client_payload.site] }}
    steps:
      - name: Format path
        id: format
        uses: frabert/replace-string-action@v2
        with:
          pattern: '\.md'
          string: ${{ github.event.client_payload.path }}
          replace-with: ''
      - name: echo domain
        run: |
          echo "Domain: ${{ matrix.domain }}"
      - name: Purge CDN JSON
        id: purgecdnjson
        uses: fjogeleit/http-request-action@v1
        with:
          url: ${{ format('https://api.fastly.com/purge/{0}{1}', matrix.domain,  steps.format.outputs.replaced) }}
          method: 'POST'
          customHeaders: '{"Content-Type": "application/json", "Fastly-Key": "${{ secrets.FASTLY_API_KEY }}", "Accept": "application/json"}'
      - name: Show Response
        run: |
          echo ${{ steps.purgecdnjson.outputs.response }}
          echo ${{ steps.purgecdnjson.outputs.headers }}
          echo ${{ steps.purgecdnjson.outputs.status }}
